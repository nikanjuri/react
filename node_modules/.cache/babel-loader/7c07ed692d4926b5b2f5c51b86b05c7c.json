{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilanjuri/Downloads/react/src/Table.js\",\n    _s = $RefreshSig$();\n\n// import { Table, Button } from 'react-bootstrap';\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Button } from \"@mui/material\";\nimport axios from \"axios\";\nimport { download_url, generate_url, generate_specific_report_url } from \"./ApiPaths\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableRow = styled(TableRow)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    \"&:nth-of-type(even)\": {\n      backgroundColor: theme.palette.action.hover\n    },\n    // hide last border\n    \"&:last-child td, &:last-child th\": {\n      border: 0\n    }\n  };\n});\n_c = StyledTableRow;\nconst StyledTableCell = styled(TableCell)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.action.hover,\n      color: theme.palette.common.white\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14\n    }\n  };\n});\n_c2 = StyledTableCell;\n\nfunction AttributesTable(props) {\n  _s();\n\n  const gunnarStyle = {\n    height: \"35px\",\n    padding: \"0px 10px\"\n  };\n  const {\n    data,\n    columns,\n    changeSetSelectedRows,\n    filenumber,\n    btnAvailable\n  } = props;\n  const [buttonClickInfo, setButtonClickInfo] = useState({\n    \"clicked\": false,\n    \"index\": -1\n  });\n  const [show, setShow] = useState(false);\n  const [rowInfo, setCurrentRowInfo] = useState({});\n  const [activeParent, setActiveParent] = useState(false);\n  const [active, setActive] = useState(null);\n  useEffect(() => {\n    let a = [];\n\n    for (var i = 0; i < (data === null || data === void 0 ? void 0 : data.length); i++) {\n      a.push(false);\n    }\n\n    setActive(a); // console.log(\"data\", data);\n  }, []);\n  useEffect(() => {\n    if (activeParent) {\n      changeSetSelectedRows(data);\n    } else {\n      changeSetSelectedRows([]);\n    }\n  }, [activeParent]);\n  useEffect(() => {\n    if (active) {\n      let res = [];\n      Object.values(active).forEach((state, index) => {\n        if (state) {\n          res.push(data[index]);\n        }\n      });\n      changeSetSelectedRows(res);\n    }\n  }, [active]);\n\n  const handleClose = () => {\n    setCurrentRowInfo({});\n    setShow(false);\n  };\n\n  const handleShow = rowInfo => {\n    setCurrentRowInfo(rowInfo);\n    setShow(true);\n  };\n\n  const handleChange = index => {\n    const activeTemp = Object.assign({}, active);\n    activeTemp[index] = !active[index];\n    setActive(activeTemp);\n    setActiveParent(false);\n  };\n\n  const handleChangeParent = () => {\n    let a = [];\n\n    for (var i = 0; i < (data === null || data === void 0 ? void 0 : data.length); i++) {\n      a.push(!activeParent);\n    }\n\n    setActive(a);\n    setActiveParent(!activeParent);\n  };\n\n  const onClickGenerate = (e, sampleID, refrenceID) => {\n    e.stopPropagation();\n    let filenumber = 1;\n    let res = axios.post(generate_specific_report_url, {\n      filenumber,\n      sampleID\n    }, {\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    }).then(res => {\n      console.log(res);\n      alert(\"Report Generated Successfully!\");\n    }).catch(err => console.log(\"Refresh Error Occured\")); // axios\n    // .get(`${generate_url}${sampleID}/${refrenceID}/${filenumber}/`, {\n    //   headers : { \n    //     'Content-Type': 'application/json'\n    //    },\n    //   responseType: 'blob',\n    // })\n    // .then((res) => {\n    //   const url = window.URL.createObjectURL(new Blob([res.data]));\n    //   console.log(url)\n    //   const link = document.createElement('a');\n    //   link.href = url;\n    //   link.setAttribute('download', `${sampleID}.json`); //or any other extension\n    //   document.body.appendChild(link);\n    //   link.click();\n    //   document.body.removeChild(link)\n    // });\n  };\n\n  const onClickDownload = e => {\n    e.stopPropagation();\n    axios.post(download_url, filenumber, {\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      responseType: 'blob'\n    }).then(res => {\n      var fileDownload = require('js-file-download');\n\n      fileDownload(res.data, 'report.pdf');\n    });\n  };\n\n  const onClickEmail = e => {\n    e.stopPropagation();\n    console.log(\"only generate and no modal\");\n  };\n\n  const makeHeader = () => {\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: handleChangeParent,\n            checked: activeParent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), columns.map((colName, index) => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              minWidth: \"100px\"\n            },\n            children: colName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            maxWidth: \"2em\",\n            textAlign: \"center\"\n          },\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  };\n\n  const makeBody = () => {\n    if (data.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => handleChange(index),\n            checked: active && active[index] || activeParent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), Object.values(row).map((val, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val !== \"\" ? val : new Array(10).join(\" \")\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"rowAlign\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"table-button\",\n              onClick: onClickGenerate,\n              children: \"Generate Reports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"table-button\",\n                onClick: onClickDownload,\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"table-button\",\n              onClick: onClickDownload,\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 700\n      },\n      \"aria-label\": \"customized table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [columns.map((column, index) => {\n            return /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              style: {\n                color: \"black\",\n                fontWeight: \"700\"\n              },\n              children: column\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            style: {\n              color: \"black\",\n              fontWeight: \"700\"\n            },\n            children: \"ACTIONS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          style: gunnarStyle,\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            style: gunnarStyle,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            style: gunnarStyle,\n            component: \"th\",\n            scope: \"row\",\n            children: row.sampleId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            style: gunnarStyle,\n            children: row.barcodeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            style: gunnarStyle,\n            children: row.animalSpecies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            style: gunnarStyle,\n            children: row.panel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            style: gunnarStyle,\n            children: row.labRefId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            style: gunnarStyle,\n            children: row.animalName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            style: gunnarStyle,\n            children: row.refDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            style: gunnarStyle,\n            children: row.reportDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            style: gunnarStyle,\n            children: row.customerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            style: gunnarStyle,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-button-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"testbutton\" //disabled={btnAvailable}\n                ,\n                onClick: e => {\n                  setButtonClickInfo({\n                    \"clicked\": true,\n                    \"index\": index\n                  });\n                  onClickGenerate(e, row.sampleId, row.referenceId);\n                },\n                children: \"Generate Reports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"testbutton\",\n                  disabled: btnAvailable ? true : buttonClickInfo['clicked'] === true && buttonClickInfo[\"index\"] === index ? false : true,\n                  onClick: e => onClickDownload(),\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"testbutton\",\n                onClick: onClickDownload,\n                children: \"E-mail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this) // <Table variant=\"light\" size=\"sm\" className=\"paddings\">\n  //     {makeHeader()}\n  //     {makeBody()}\n  // </Table>\n  ;\n}\n\n_s(AttributesTable, \"VZ0MIqd5hxBqIIFAdja/Os6KCog=\");\n\n_c3 = AttributesTable;\nexport default AttributesTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledTableRow\");\n$RefreshReg$(_c2, \"StyledTableCell\");\n$RefreshReg$(_c3, \"AttributesTable\");","map":{"version":3,"sources":["/Users/nikhilanjuri/Downloads/react/src/Table.js"],"names":["useState","useEffect","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","Button","axios","download_url","generate_url","generate_specific_report_url","StyledTableRow","theme","backgroundColor","palette","action","hover","border","StyledTableCell","head","color","common","white","body","fontSize","AttributesTable","props","gunnarStyle","height","padding","data","columns","changeSetSelectedRows","filenumber","btnAvailable","buttonClickInfo","setButtonClickInfo","show","setShow","rowInfo","setCurrentRowInfo","activeParent","setActiveParent","active","setActive","a","i","length","push","res","Object","values","forEach","state","index","handleClose","handleShow","handleChange","activeTemp","assign","handleChangeParent","onClickGenerate","e","sampleID","refrenceID","stopPropagation","post","headers","then","console","log","alert","catch","err","onClickDownload","responseType","fileDownload","require","onClickEmail","makeHeader","map","colName","minWidth","maxWidth","textAlign","makeBody","row","val","Array","join","column","fontWeight","sampleId","barcodeName","animalSpecies","panel","labRefId","animalName","refDate","reportDate","customerName","referenceId"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,IAAoBC,gBAApB,QAA4C,yBAA5C;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAoCC,4BAApC,QAAwE,YAAxE;;AAGA,MAAMC,cAAc,GAAGd,MAAM,CAACO,QAAD,CAAN,CAAiB;AAAA,MAAC;AAAEQ,IAAAA;AAAF,GAAD;AAAA,SAAgB;AACtD,2BAAuB;AACrBC,MAAAA,eAAe,EAAED,KAAK,CAACE,OAAN,CAAcC,MAAd,CAAqBC;AADjB,KAD+B;AAItD;AACA,wCAAoC;AAClCC,MAAAA,MAAM,EAAE;AAD0B;AALkB,GAAhB;AAAA,CAAjB,CAAvB;KAAMN,c;AASN,MAAMO,eAAe,GAAGrB,MAAM,CAACG,SAAD,CAAN,CAAkB;AAAA,MAAC;AAAEY,IAAAA;AAAF,GAAD;AAAA,SAAgB;AACxD,KAAE,KAAIX,gBAAgB,CAACkB,IAAK,EAA5B,GAAgC;AAC9BN,MAAAA,eAAe,EAAED,KAAK,CAACE,OAAN,CAAcC,MAAd,CAAqBC,KADR;AAE9BI,MAAAA,KAAK,EAAER,KAAK,CAACE,OAAN,CAAcO,MAAd,CAAqBC;AAFE,KADwB;AAKxD,KAAE,KAAIrB,gBAAgB,CAACsB,IAAK,EAA5B,GAAgC;AAC9BC,MAAAA,QAAQ,EAAE;AADoB;AALwB,GAAhB;AAAA,CAAlB,CAAxB;MAAMN,e;;AAUN,SAASO,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAMC,WAAW,GAAG;AAAEC,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAApB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,qBAAjB;AAAwCC,IAAAA,UAAxC;AAAoDC,IAAAA;AAApD,MAAqER,KAA3E;AAEA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCzC,QAAQ,CAAC;AAAE,eAAW,KAAb;AAAoB,aAAS,CAAC;AAA9B,GAAD,CAAtD;AAEA,QAAM,CAAC0C,IAAD,EAAOC,OAAP,IAAkB3C,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC4C,OAAD,EAAUC,iBAAV,IAA+B7C,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAAC8C,YAAD,EAAeC,eAAf,IAAkC/C,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACgD,MAAD,EAASC,SAAT,IAAsBjD,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiD,CAAC,GAAG,EAAR;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAGhB,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEiB,MAAT,CAAjB,EAAkCD,CAAC,EAAnC,EAAuC;AACrCD,MAAAA,CAAC,CAACG,IAAF,CAAO,KAAP;AACD;;AACDJ,IAAAA,SAAS,CAACC,CAAD,CAAT,CALc,CAMd;AACD,GAPQ,EAON,EAPM,CAAT;AASAjD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6C,YAAJ,EAAkB;AAChBT,MAAAA,qBAAqB,CAACF,IAAD,CAArB;AACD,KAFD,MAEO;AACLE,MAAAA,qBAAqB,CAAC,EAAD,CAArB;AACD;AACF,GANQ,EAMN,CAACS,YAAD,CANM,CAAT;AAQA7C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI+C,MAAJ,EAAY;AACV,UAAIM,GAAG,GAAG,EAAV;AACAC,MAAAA,MAAM,CAACC,MAAP,CAAcR,MAAd,EAAsBS,OAAtB,CAA8B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC9C,YAAID,KAAJ,EAAW;AACTJ,UAAAA,GAAG,CAACD,IAAJ,CAASlB,IAAI,CAACwB,KAAD,CAAb;AACD;AACF,OAJD;AAKAtB,MAAAA,qBAAqB,CAACiB,GAAD,CAArB;AACD;AACF,GAVQ,EAUN,CAACN,MAAD,CAVM,CAAT;;AAYA,QAAMY,WAAW,GAAG,MAAM;AACxBf,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD;;AAKA,QAAMkB,UAAU,GAAIjB,OAAD,IAAa;AAC9BC,IAAAA,iBAAiB,CAACD,OAAD,CAAjB;AACAD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAKA,QAAMmB,YAAY,GAAIH,KAAD,IAAW;AAC9B,UAAMI,UAAU,GAAGR,MAAM,CAACS,MAAP,CAAc,EAAd,EAAkBhB,MAAlB,CAAnB;AACAe,IAAAA,UAAU,CAACJ,KAAD,CAAV,GAAoB,CAACX,MAAM,CAACW,KAAD,CAA3B;AACAV,IAAAA,SAAS,CAACc,UAAD,CAAT;AACAhB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GALD;;AAOA,QAAMkB,kBAAkB,GAAG,MAAM;AAC/B,QAAIf,CAAC,GAAG,EAAR;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAGhB,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEiB,MAAT,CAAjB,EAAkCD,CAAC,EAAnC,EAAuC;AACrCD,MAAAA,CAAC,CAACG,IAAF,CAAO,CAACP,YAAR;AACD;;AACDG,IAAAA,SAAS,CAACC,CAAD,CAAT;AACAH,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAPD;;AASA,QAAMoB,eAAe,GAAG,CAACC,CAAD,EAAIC,QAAJ,EAAcC,UAAd,KAA6B;AACnDF,IAAAA,CAAC,CAACG,eAAF;AACA,QAAIhC,UAAU,GAAG,CAAjB;AACA,QAAIgB,GAAG,GAAG1C,KAAK,CAAC2D,IAAN,CAAWxD,4BAAX,EAAyC;AAAEuB,MAAAA,UAAF;AAAa8B,MAAAA;AAAb,KAAzC,EAAkE;AAC1EI,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADiE,KAAlE,EAKPC,IALO,CAKDnB,GAAD,IAAS;AACboB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAZ;AACAsB,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACD,KARO,EASPC,KATO,CASAC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,uBAAZ,CATR,CAAV,CAHmD,CAanD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA9BD;;AAgCA,QAAMI,eAAe,GAAIZ,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACG,eAAF;AACA1D,IAAAA,KAAK,CACF2D,IADH,CACQ1D,YADR,EACsByB,UADtB,EACkC;AAC9BkC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OADqB;AAI9BQ,MAAAA,YAAY,EAAE;AAJgB,KADlC,EAOGP,IAPH,CAOSnB,GAAD,IAAS;AACb,UAAI2B,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AACAD,MAAAA,YAAY,CAAC3B,GAAG,CAACnB,IAAL,EAAW,YAAX,CAAZ;AAED,KAXH;AAYD,GAdD;;AAgBA,QAAMgD,YAAY,GAAIhB,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACG,eAAF;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,GAHD;;AAKA,QAAMS,UAAU,GAAG,MAAM;AACvB,wBACE;AAAA,6BACE;AAAA,gCACE;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,OAAO,EAAEnB,kBAFX;AAGE,YAAA,OAAO,EAAEnB;AAHX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGV,OAAO,CAACiD,GAAR,CAAY,CAACC,OAAD,EAAU3B,KAAV,KAAoB;AAC/B,8BACE;AAAI,YAAA,KAAK,EAAE;AAAE4B,cAAAA,QAAQ,EAAE;AAAZ,aAAX;AAAA,sBACGD;AADH,aAAuC3B,KAAvC;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA,CARH,eAeE;AAAI,UAAA,KAAK,EAAE;AAAE6B,YAAAA,QAAQ,EAAE,KAAZ;AAAmBC,YAAAA,SAAS,EAAE;AAA9B,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD,GAtBD;;AAwBA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIvD,IAAI,CAACiB,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAO,IAAP;AACD;;AACD,wBACE;AAAA,gBACGjB,IAAI,CAACkD,GAAL,CAAS,CAACM,GAAD,EAAMhC,KAAN,KAAgB;AACxB,4BACE;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,OAAO,EAAE,MAAMG,YAAY,CAACH,KAAD,CAF7B;AAGE,YAAA,OAAO,EAAGX,MAAM,IAAIA,MAAM,CAACW,KAAD,CAAjB,IAA6Bb;AAHxC;AAAA;AAAA;AAAA;AAAA,kBADF,EAMGS,MAAM,CAACC,MAAP,CAAcmC,GAAd,EAAmBN,GAAnB,CAAuB,CAACO,GAAD,EAAMjC,KAAN,KAAgB;AACtC,gCACE;AAAA,wBACGiC,GAAG,KAAK,EAAR,GAAaA,GAAb,GAAmB,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,GAAnB;AADtB,eAASnC,KAAT;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA,CANH,eAaE;AAAI,YAAA,SAAS,EAAC,UAAd;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,cAAlB;AAAiC,cAAA,OAAO,EAAEO,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,cAAlB;AAAiC,gBAAA,OAAO,EAAEa,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eASE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,cAAlB;AAAiC,cAAA,OAAO,EAAEA,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA,WAASpB,KAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AA6BD,OA9BA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAmCD,GAvCD;;AAwCA,sBACE,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAEjD,KAA3B;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAE;AAAE6E,QAAAA,QAAQ,EAAE;AAAZ,OAAX;AAA8B,oBAAW,kBAAzC;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,qBACGnD,OAAO,CAACiD,GAAR,CAAY,CAACU,MAAD,EAASpC,KAAT,KAAmB;AAC9B,gCACE,QAAC,eAAD;AAEE,cAAA,KAAK,EAAE;AAAElC,gBAAAA,KAAK,EAAE,OAAT;AAAkBuE,gBAAAA,UAAU,EAAE;AAA9B,eAFT;AAAA,wBAIGD;AAJH,eACOpC,KADP;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WATA,CADH,eAWE,QAAC,eAAD;AACE,YAAA,KAAK,EAAC,QADR;AAEE,YAAA,KAAK,EAAE;AAAElC,cAAAA,KAAK,EAAE,OAAT;AAAkBuE,cAAAA,UAAU,EAAE;AAA9B,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAqBE,QAAC,SAAD;AAAA,kBACG7D,IAAI,CAACkD,GAAL,CAAS,CAACM,GAAD,EAAMhC,KAAN,kBACR,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAE3B,WAAvB;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAEA,WAAxB;AAAA,mCACE;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAEA,WAAxB;AAAqC,YAAA,SAAS,EAAC,IAA/C;AAAoD,YAAA,KAAK,EAAC,KAA1D;AAAA,sBACG2D,GAAG,CAACM;AADP;AAAA;AAAA;AAAA;AAAA,kBAJF,eAQE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAEjE,WAAxB;AAAA,sBACG2D,GAAG,CAACO;AADP;AAAA;AAAA;AAAA;AAAA,kBARF,eAWE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAElE,WAAxB;AAAA,sBACG2D,GAAG,CAACQ;AADP;AAAA;AAAA;AAAA;AAAA,kBAXF,eAcE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAEnE,WAAxB;AAAA,sBAAsC2D,GAAG,CAACS;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAdF,eAeE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAEpE,WAAxB;AAAA,sBACG2D,GAAG,CAACU;AADP;AAAA;AAAA;AAAA;AAAA,kBAfF,eAkBE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAErE,WAAxB;AAAA,sBACG2D,GAAG,CAACW;AADP;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAqBE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAEtE,WAAxB;AAAA,sBACG2D,GAAG,CAACY;AADP;AAAA;AAAA;AAAA;AAAA,kBArBF,eAwBE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAEvE,WAAxB;AAAA,sBACG2D,GAAG,CAACa;AADP;AAAA;AAAA;AAAA;AAAA,kBAxBF,eA2BE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAExE,WAAxB;AAAA,sBACG2D,GAAG,CAACc;AADP;AAAA;AAAA;AAAA;AAAA,kBA3BF,eA8BE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAEzE,WAAxB;AAAqC,YAAA,KAAK,EAAC,QAA3C;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,YAAlB,CACA;AADA;AAEA,gBAAA,OAAO,EAAGmC,CAAD,IAAO;AACd1B,kBAAAA,kBAAkB,CAAC;AAAE,+BAAW,IAAb;AAAmB,6BAASkB;AAA5B,mBAAD,CAAlB;AACAO,kBAAAA,eAAe,CAACC,CAAD,EAAIwB,GAAG,CAACM,QAAR,EAAkBN,GAAG,CAACe,WAAtB,CAAf;AAED,iBAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE;AAAA,uCAEE,QAAC,MAAD;AAAQ,kBAAA,SAAS,EAAC,YAAlB;AAA+B,kBAAA,QAAQ,EAAEnE,YAAY,GAAG,IAAH,GAAWC,eAAe,CAAC,SAAD,CAAf,KAA+B,IAA/B,IAAuCA,eAAe,CAAC,OAAD,CAAf,KAA6BmB,KAArE,GAA8E,KAA9E,GAAsF,IAArJ;AAA2J,kBAAA,OAAO,EAAGQ,CAAD,IAAOY,eAAe,EAA1L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,sBAVF,eAgBE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,YAAlB;AAA+B,gBAAA,OAAO,EAAEA,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA9BF;AAAA,WAAyCpB,KAAzC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CAkFE;AACA;AACA;AACA;AArFF;AAuFD;;GA9QQ7B,e;;MAAAA,e;AAgRT,eAAeA,eAAf","sourcesContent":["// import { Table, Button } from 'react-bootstrap';\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Button } from \"@mui/material\";\nimport axios from \"axios\";\nimport { download_url, generate_url,generate_specific_report_url } from \"./ApiPaths\";\n\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(even)\": {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n  },\n}));\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.action.hover,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nfunction AttributesTable(props) {\n  const gunnarStyle = { height: \"35px\", padding: \"0px 10px\" };\n  const { data, columns, changeSetSelectedRows, filenumber, btnAvailable } = props;\n\n  const [buttonClickInfo, setButtonClickInfo] = useState({ \"clicked\": false, \"index\": -1 });\n\n  const [show, setShow] = useState(false);\n  const [rowInfo, setCurrentRowInfo] = useState({});\n  const [activeParent, setActiveParent] = useState(false);\n  const [active, setActive] = useState(null);\n\n  useEffect(() => {\n    let a = [];\n    for (var i = 0; i < data?.length; i++) {\n      a.push(false);\n    }\n    setActive(a);\n    // console.log(\"data\", data);\n  }, []);\n\n  useEffect(() => {\n    if (activeParent) {\n      changeSetSelectedRows(data);\n    } else {\n      changeSetSelectedRows([]);\n    }\n  }, [activeParent]);\n\n  useEffect(() => {\n    if (active) {\n      let res = [];\n      Object.values(active).forEach((state, index) => {\n        if (state) {\n          res.push(data[index]);\n        }\n      });\n      changeSetSelectedRows(res);\n    }\n  }, [active]);\n\n  const handleClose = () => {\n    setCurrentRowInfo({});\n    setShow(false);\n  };\n\n  const handleShow = (rowInfo) => {\n    setCurrentRowInfo(rowInfo);\n    setShow(true);\n  };\n\n  const handleChange = (index) => {\n    const activeTemp = Object.assign({}, active);\n    activeTemp[index] = !active[index];\n    setActive(activeTemp);\n    setActiveParent(false);\n  };\n\n  const handleChangeParent = () => {\n    let a = [];\n    for (var i = 0; i < data?.length; i++) {\n      a.push(!activeParent);\n    }\n    setActive(a);\n    setActiveParent(!activeParent);\n  };\n\n  const onClickGenerate = (e, sampleID, refrenceID) => {\n    e.stopPropagation();\n    let filenumber = 1;\n    let res = axios.post(generate_specific_report_url, { filenumber,sampleID }, {\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    })\n      .then((res) => {\n        console.log(res)\n        alert(\"Report Generated Successfully!\")\n      })\n      .catch((err) => console.log(\"Refresh Error Occured\"));\n    // axios\n    // .get(`${generate_url}${sampleID}/${refrenceID}/${filenumber}/`, {\n    //   headers : { \n    //     'Content-Type': 'application/json'\n    //    },\n    //   responseType: 'blob',\n    // })\n    // .then((res) => {\n    //   const url = window.URL.createObjectURL(new Blob([res.data]));\n    //   console.log(url)\n    //   const link = document.createElement('a');\n    //   link.href = url;\n    //   link.setAttribute('download', `${sampleID}.json`); //or any other extension\n    //   document.body.appendChild(link);\n    //   link.click();\n    //   document.body.removeChild(link)\n    // });\n  };\n\n  const onClickDownload = (e) => {\n    e.stopPropagation();\n    axios\n      .post(download_url, filenumber, {\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        responseType: 'blob',\n      })\n      .then((res) => {\n        var fileDownload = require('js-file-download');\n        fileDownload(res.data, 'report.pdf');\n\n      });\n  };\n\n  const onClickEmail = (e) => {\n    e.stopPropagation();\n    console.log(\"only generate and no modal\");\n  };\n\n  const makeHeader = () => {\n    return (\n      <thead>\n        <tr>\n          <th>\n            <input\n              type=\"checkbox\"\n              onClick={handleChangeParent}\n              checked={activeParent}\n            />\n          </th>\n          {columns.map((colName, index) => {\n            return (\n              <th style={{ minWidth: \"100px\" }} key={index}>\n                {colName}\n              </th>\n            );\n          })}\n          <th style={{ maxWidth: \"2em\", textAlign: \"center\" }}>Actions</th>\n        </tr>\n      </thead>\n    );\n  };\n\n  const makeBody = () => {\n    if (data.length === 0) {\n      return null;\n    }\n    return (\n      <tbody>\n        {data.map((row, index) => {\n          return (\n            <tr key={index}>\n              <input\n                type=\"checkbox\"\n                onClick={() => handleChange(index)}\n                checked={(active && active[index]) || activeParent}\n              />\n              {Object.values(row).map((val, index) => {\n                return (\n                  <td key={index}>\n                    {val !== \"\" ? val : new Array(10).join(\" \")}\n                  </td>\n                );\n              })}\n              <td className=\"rowAlign\">\n                <Button className=\"table-button\" onClick={onClickGenerate}>\n                  Generate Reports\n                </Button>\n                <a>\n                  <Button className=\"table-button\" onClick={onClickDownload}>\n                    Download\n                  </Button>\n                </a>\n                <Button className=\"table-button\" onClick={onClickDownload}>\n                  Email\n                </Button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    );\n  };\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            {columns.map((column, index) => {\n              return (\n                <StyledTableCell\n                  key={index}\n                  style={{ color: \"black\", fontWeight: \"700\" }}\n                >\n                  {column}\n                </StyledTableCell>\n              );\n            })}\n            <StyledTableCell\n              align=\"center\"\n              style={{ color: \"black\", fontWeight: \"700\" }}\n            >\n              ACTIONS\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row, index) => (\n            <StyledTableRow style={gunnarStyle} key={index}>\n              <StyledTableCell style={gunnarStyle}>\n                <input type=\"checkbox\" />\n              </StyledTableCell>\n              <StyledTableCell style={gunnarStyle} component=\"th\" scope=\"row\">\n                {row.sampleId}\n              </StyledTableCell>\n\n              <StyledTableCell style={gunnarStyle}>\n                {row.barcodeName}\n              </StyledTableCell>\n              <StyledTableCell style={gunnarStyle}>\n                {row.animalSpecies}\n              </StyledTableCell>\n              <StyledTableCell style={gunnarStyle}>{row.panel}</StyledTableCell>\n              <StyledTableCell style={gunnarStyle}>\n                {row.labRefId}\n              </StyledTableCell>\n              <StyledTableCell style={gunnarStyle}>\n                {row.animalName}\n              </StyledTableCell>\n              <StyledTableCell style={gunnarStyle}>\n                {row.refDate}\n              </StyledTableCell>\n              <StyledTableCell style={gunnarStyle}>\n                {row.reportDate}\n              </StyledTableCell>\n              <StyledTableCell style={gunnarStyle}>\n                {row.customerName}\n              </StyledTableCell>\n              <StyledTableCell style={gunnarStyle} align=\"center\">\n                <div className=\"table-button-wrapper\">\n                  <Button className=\"testbutton\" \n                  //disabled={btnAvailable}\n                  onClick={(e) => {\n                    setButtonClickInfo({ \"clicked\": true, \"index\": index })\n                    onClickGenerate(e, row.sampleId, row.referenceId)\n\n                  }}>\n                    Generate Reports\n                  </Button>\n                  <a\n                  >\n                    <Button className=\"testbutton\" disabled={btnAvailable ? true : (buttonClickInfo['clicked'] === true && buttonClickInfo[\"index\"] === index) ? false : true} onClick={(e) => onClickDownload()}>\n                      Download\n                    </Button>\n                  </a>\n                  <Button className=\"testbutton\" onClick={onClickDownload}>\n                    E-mail\n                  </Button>\n                </div>\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    // <Table variant=\"light\" size=\"sm\" className=\"paddings\">\n    //     {makeHeader()}\n    //     {makeBody()}\n    // </Table>\n  );\n}\n\nexport default AttributesTable;\n"]},"metadata":{},"sourceType":"module"}
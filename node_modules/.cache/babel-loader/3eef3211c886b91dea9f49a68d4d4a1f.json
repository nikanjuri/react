{"ast":null,"code":"export const keyToNameMapping = {\n  Check: 'Check',\n  SAMPLE_ID: 'sampleId',\n  BARCODE_NAME: 'barcode',\n  SPECIES: 'animalSpecies',\n  PANEL: 'panel',\n  LAB_REF_ID: 'labRefId',\n  ANIMAL_NAME: 'animalName',\n  LAB_REF_ID: 'labRefId',\n  REF_DATE: 'refDate',\n  REPORT_DATE: 'reportDate',\n  CUSTOMER_NAME: 'customerName'\n};\nexport const keyToNameMappingCSV = {\n  LAB_REF_ID: 'LabRefId',\n  CUSTOMER_NAME: 'CustomerName',\n  ANIMAL_NAME: 'AnimalNameOrID'\n};\nexport const mergeTables = (currentFile, csvJsonFile) => {\n  let combinedAll = [];\n  currentFile.forEach(row => {\n    if (row && Object.keys(row).length !== 0) {\n      const referenceId = row['sampleId']; // console.log(referenceId)\n\n      const referenceIdExists = csvJsonFile.find(file => file['LabRefId'] === referenceId);\n      row['reportDate'] = new Date().toLocaleDateString();\n\n      if (referenceIdExists && referenceIdExists !== -1) {\n        combinedAll.push({\n          'sampleId': row['sampleId'],\n          'barcodeName': row['barcode'],\n          'animalSpecies': row['animalSpecies'],\n          'panel': row['panel'],\n          'labRefId': referenceIdExists['LabRefId'],\n          'animalName': referenceIdExists['AnimalNameOrID'],\n          'refDate': row['refDate'],\n          'reportDate': row['reportDate'],\n          'customerName': referenceIdExists['CustomerName'],\n          'referenceId': referenceIdExists['ReferenceId']\n        });\n      } else {\n        combinedAll.push({\n          'sampleId': row['sampleId'],\n          'barcodeName': row['barcode'],\n          'animalSpecies': row['animalSpecies'],\n          'panel': row['panel'],\n          'labRefId': '',\n          'animalName': '',\n          'refDate': row['refDate'],\n          'reportDate': row['reportDate'],\n          'customerName': ''\n        });\n      }\n    }\n\n    ;\n  });\n  return combinedAll;\n};","map":{"version":3,"sources":["/Users/nikhilanjuri/Downloads/react/src/keyToName.js"],"names":["keyToNameMapping","Check","SAMPLE_ID","BARCODE_NAME","SPECIES","PANEL","LAB_REF_ID","ANIMAL_NAME","REF_DATE","REPORT_DATE","CUSTOMER_NAME","keyToNameMappingCSV","mergeTables","currentFile","csvJsonFile","combinedAll","forEach","row","Object","keys","length","referenceId","referenceIdExists","find","file","Date","toLocaleDateString","push"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG;AAC5BC,EAAAA,KAAK,EAAE,OADqB;AAE5BC,EAAAA,SAAS,EAAE,UAFiB;AAG5BC,EAAAA,YAAY,EAAE,SAHc;AAI5BC,EAAAA,OAAO,EAAE,eAJmB;AAK5BC,EAAAA,KAAK,EAAE,OALqB;AAM5BC,EAAAA,UAAU,EAAE,UANgB;AAO5BC,EAAAA,WAAW,EAAE,YAPe;AAQ5BD,EAAAA,UAAU,EAAE,UARgB;AAS5BE,EAAAA,QAAQ,EAAE,SATkB;AAU5BC,EAAAA,WAAW,EAAE,YAVe;AAW5BC,EAAAA,aAAa,EAAE;AAXa,CAAzB;AAcP,OAAO,MAAMC,mBAAmB,GAAG;AAC/BL,EAAAA,UAAU,EAAE,UADmB;AAE/BI,EAAAA,aAAa,EAAE,cAFgB;AAG/BH,EAAAA,WAAW,EAAE;AAHkB,CAA5B;AAMP,OAAO,MAAMK,WAAW,GAAG,CAACC,WAAD,EAAcC,WAAd,KAA8B;AACrD,MAAIC,WAAW,GAAG,EAAlB;AACAF,EAAAA,WAAW,CAACG,OAAZ,CAAoBC,GAAG,IAAI;AACvB,QAAIA,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,KAA4B,CAAvC,EAA0C;AACtC,YAAMC,WAAW,GAAGJ,GAAG,CAAC,UAAD,CAAvB,CADsC,CAEtC;;AACA,YAAMK,iBAAiB,GAAGR,WAAW,CAACS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBH,WAA9C,CAA1B;AACAJ,MAAAA,GAAG,CAAC,YAAD,CAAH,GAAoB,IAAIQ,IAAJ,GAAWC,kBAAX,EAApB;;AACA,UAAIJ,iBAAiB,IAAIA,iBAAiB,KAAK,CAAC,CAAhD,EAAmD;AAC/CP,QAAAA,WAAW,CAACY,IAAZ,CAAiB;AACb,sBAAYV,GAAG,CAAC,UAAD,CADF;AAEb,yBAAeA,GAAG,CAAC,SAAD,CAFL;AAGb,2BAAiBA,GAAG,CAAC,eAAD,CAHP;AAIb,mBAASA,GAAG,CAAC,OAAD,CAJC;AAKb,sBAAYK,iBAAiB,CAAC,UAAD,CALhB;AAMb,wBAAcA,iBAAiB,CAAC,gBAAD,CANlB;AAOb,qBAAWL,GAAG,CAAC,SAAD,CAPD;AAQb,wBAAcA,GAAG,CAAC,YAAD,CARJ;AASb,0BAAgBK,iBAAiB,CAAC,cAAD,CATpB;AAUb,yBAAeA,iBAAiB,CAAC,aAAD;AAVnB,SAAjB;AAYH,OAbD,MAaO;AACHP,QAAAA,WAAW,CAACY,IAAZ,CAAiB;AACb,sBAAYV,GAAG,CAAC,UAAD,CADF;AAEb,yBAAeA,GAAG,CAAC,SAAD,CAFL;AAGb,2BAAiBA,GAAG,CAAC,eAAD,CAHP;AAIb,mBAASA,GAAG,CAAC,OAAD,CAJC;AAKb,sBAAY,EALC;AAMb,wBAAc,EAND;AAOb,qBAAWA,GAAG,CAAC,SAAD,CAPD;AAQb,wBAAcA,GAAG,CAAC,YAAD,CARJ;AASb,0BAAgB;AATH,SAAjB;AAWH;AACJ;;AAAA;AACJ,GAjCD;AAkCA,SAAOF,WAAP;AACH,CArCM","sourcesContent":["export const keyToNameMapping = {\n    Check: 'Check',\n    SAMPLE_ID: 'sampleId',\n    BARCODE_NAME: 'barcode',\n    SPECIES: 'animalSpecies',\n    PANEL: 'panel',\n    LAB_REF_ID: 'labRefId',\n    ANIMAL_NAME: 'animalName',\n    LAB_REF_ID: 'labRefId',\n    REF_DATE: 'refDate',\n    REPORT_DATE: 'reportDate',\n    CUSTOMER_NAME: 'customerName'\n};\n\nexport const keyToNameMappingCSV = {\n    LAB_REF_ID: 'LabRefId',\n    CUSTOMER_NAME: 'CustomerName',\n    ANIMAL_NAME: 'AnimalNameOrID'\n};\n\nexport const mergeTables = (currentFile, csvJsonFile) => {\n    let combinedAll = []\n    currentFile.forEach(row => {\n        if (row && Object.keys(row).length !== 0) {\n            const referenceId = row['sampleId'];\n            // console.log(referenceId)\n            const referenceIdExists = csvJsonFile.find(file => file['LabRefId'] === referenceId)\n            row['reportDate'] = new Date().toLocaleDateString()\n            if (referenceIdExists && referenceIdExists !== -1) {\n                combinedAll.push({\n                    'sampleId': row['sampleId'],\n                    'barcodeName': row['barcode'],\n                    'animalSpecies': row['animalSpecies'],\n                    'panel': row['panel'],\n                    'labRefId': referenceIdExists['LabRefId'],\n                    'animalName': referenceIdExists['AnimalNameOrID'],\n                    'refDate': row['refDate'],\n                    'reportDate': row['reportDate'],\n                    'customerName': referenceIdExists['CustomerName'],\n                    'referenceId': referenceIdExists['ReferenceId']\n                })\n            } else {\n                combinedAll.push({\n                    'sampleId': row['sampleId'],\n                    'barcodeName': row['barcode'],\n                    'animalSpecies': row['animalSpecies'],\n                    'panel': row['panel'],\n                    'labRefId': '',\n                    'animalName': '',\n                    'refDate': row['refDate'],\n                    'reportDate': row['reportDate'],\n                    'customerName': ''\n                });\n            }\n        };\n    });\n    return combinedAll\n}"]},"metadata":{},"sourceType":"module"}